1
00:00:13,219 --> 00:00:20,490
Abordons maintenant d'un autre sujet, celui de l'augmentation des données.

2
00:00:20,490 --> 00:00:24,180
Supposons que vous disposez d'un ensemble de données. Ce qui peut être vraiment utile,

3
00:00:24,180 --> 00:00:28,710
c’est d’augmenter votre ensemble de données par l'augmentation des données.

4
00:00:28,710 --> 00:00:35,010
C'est une chose dont AlexNet a tiré parti dans leur publication originale.

5
00:00:35,010 --> 00:00:39,600
Alors AlexNet a utilisé le recadrage et la projection en miroir et nous allons examiner ces deux transformations.

6
00:00:39,600 --> 00:00:43,440
L’idée derrière l'augmentation des données, c'est que vous voulez faire une sorte de transformation de votre image

7
00:00:43,440 --> 00:00:48,300
de sorte que les étiquettes de votre image restent inchangées. Par exemple,

8
00:00:48,300 --> 00:00:55,230
ici nous recadrons aléatoirement pour obtenir une zone 224 par 224 de notre image 256 par 256 et

9
00:00:55,230 --> 00:00:59,879
nous utilisons le recadrage comme entrée de notre réseau. Vous pouvez donc voir ici que nous avons l’image d’un chien et que c'est une image 256 par 256.

10
00:00:59,879 --> 00:01:05,280
Si je la recadres, vu que le chien occupe une partie importante de l’image,

11
00:01:05,280 --> 00:01:09,000
l’étiquette de chien y est encore associée et en recadrant à différents endroits,

12
00:01:09,000 --> 00:01:12,000
nous avons maintenant différentes représentations de ce chien et

13
00:01:12,000 --> 00:01:16,049
le réseau peut alors s'entraîner sur celles-ci. C’est une façon d'augmenter artificiellement notre ensemble de données

14
00:01:16,049 --> 00:01:21,210
et encore une fois, AlexNet l'avait utilisé dans leur mise en application initiale

15
00:01:21,210 --> 00:01:25,500
et c'est pourquoi ils ont utilisé une entrée de 224 par 224 afin de pouvoir utiliser ce recadrage et

16
00:01:25,500 --> 00:01:29,070
augmenter artificiellement leur ensemble de données. Ils ont découvert que c'était une astuce

17
00:01:29,070 --> 00:01:33,960
qui les a particulièrement aidés pour l’entraînement de leur réseau. Une autre chose que nous pouvons faire est la projection en miroir.

18
00:01:33,960 --> 00:01:38,100
Alors non seulement pouvons-nous recadrer, mais nous pouvons aussi tirer à pile ou face et décider si nous voulons.

19
00:01:38,100 --> 00:01:43,920
refléter nos données. Donc dans le cas d'un chien, si vous reflétez l'image

20
00:01:43,920 --> 00:01:46,950
d’un chien, l’image reste celle d’un chien. Vous devez faire attention à ce genre d’astuces

21
00:01:46,950 --> 00:01:49,950
et vous assurer que ça s'applique à vos données. Par exemple, si vous faites la projection en miroir

22
00:01:49,950 --> 00:01:54,299
d’un texte, il ne reste pas forcément le même. Si vous faites reflétez un chiffre,

23
00:01:54,299 --> 00:01:57,869
disons de l’ensemble MNIST, alors vous transformez complètement la représentation,

24
00:01:57,869 --> 00:02:04,430
à moins que vous avez des chiffres symétriques. Donc dans le cas d'ImageNet,

25
00:02:04,430 --> 00:02:08,879
il s'avère que la projection en miroir de vos images est une transformation valable pour la plupart des objets.

26
00:02:08,879 --> 00:02:11,879
En tant qu’êtres humains, si vous regardez quelque chose dans le miroir, cela devrait être la même chose que si vous regardez

27
00:02:11,879 --> 00:02:14,550
quelque chose sans regarder sa réflexion dans le miroir.

28
00:02:14,550 --> 00:02:19,380
Il existe un autre type d'augmentation que vous pouvez faire, à savoir la rotation.

29
00:02:19,380 --> 00:02:23,490
Donc dans ce cas, nous prenons notre image, nous la faisons tourner légèrement

30
00:02:23,490 --> 00:02:27,870
et si c'est un objet dans le monde réel, si l'angle de la caméra change légèrement,

31
00:02:27,870 --> 00:02:31,740
l'objet ou la représentation de cet objet ne devrait pas changer.

32
00:02:31,740 --> 00:02:36,300
Bien entendu, cela dépend du domaine. Si vous faites une rotation sur un spectrogramme,

33
00:02:36,300 --> 00:02:39,450
je ne crois pas que cela puisse être très utile à votre réseau pour apprendre, donc quand vous appliquez

34
00:02:39,450 --> 00:02:42,989
l'augmentation des données, ça peut être très utile, mais vous devez également être sûr

35
00:02:42,989 --> 00:02:45,930
que vous l'appliquez d'une manière qui a du sens et qui n'a pas d'impact sur

36
00:02:45,930 --> 00:02:50,630
les étiquettes lorsque vous faites l’augmentation de données.