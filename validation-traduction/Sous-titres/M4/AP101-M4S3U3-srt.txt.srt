1
00:00:13,299 --> 00:00:19,580
Pour ce qui est des approches classiques, je vais d'abord introduire l'idée des unités lexicales.

2
00:00:19,580 --> 00:00:31,009
Ce sont les unités de base de votre texte. En tant qu’être humain,

3
00:00:31,009 --> 00:00:35,809
nous avons tendance à penser qu'une phrase peut être décomposée en mots et c'est effectivement une option.

4
00:00:35,809 --> 00:00:40,910
Donc vous voyez ici que si nous avons un texte, une chose que nous pouvons faire est

5
00:00:40,910 --> 00:00:46,579
décomposer ce texte en mots. L'autre approche avec laquelle nous sommes probablement familière

6
00:00:46,579 --> 00:00:52,789
en tant qu’être humains est de décomposer notre texte en caractères.

7
00:00:52,789 --> 00:00:59,899
C'est peut-être moins connu, mais il existe aussi cette possibilité de décomposer le texte en facteurs

8
00:00:59,899 --> 00:01:06,619
et nous verrons que les facteurs se situent essentiellement

9
00:01:06,619 --> 00:01:13,490
entre les mots et caractères et nous pouvons créer des facteurs en utilisant certains algorithmes.

10
00:01:13,490 --> 00:01:17,150
Ce qui est intéressant, c'est que nous pouvons choisir une de ces représentations pour notre problème et

11
00:01:17,150 --> 00:01:24,290
nous avons des avantages et des inconvénients en fonction des différents points de vue.

12
00:01:24,290 --> 00:01:30,020
Je me concentrerai en particulier sur le point de vue

13
00:01:30,020 --> 00:01:38,030
de la taille du vocabulaire, de la longueur de la phrase et des unités lexicales hors vocabulaire.

14
00:01:38,030 --> 00:01:46,310
Je vais commencer par la taille du vocabulaire. C’est le nombre d’unités lexicales que 

15
00:01:46,310 --> 00:01:59,060
nous avons dans notre tâche et nous pouvons facilement voir que si nous utilisons les mots comme des unités lexicales,

16
00:01:59,060 --> 00:02:04,670
nous obtenons une taille de vocabulaire qui est très importante. Ici, j’ai mis 80 000,

17
00:02:04,670 --> 00:02:13,160
mais en fait le nombre peut être beaucoup plus élevé et il peut aller jusqu'à 150 000 ou 200 000. La solution inverse d'utiliser des caractères :

18
00:02:13,160 --> 00:02:18,769
dans ce cas, vous avez une taille de vocabulaire très restreinte,

19
00:02:18,769 --> 00:02:24,440
par exemple, si vous avez seulement besoin de lettres, de chiffres et peut-être de symboles spéciaux.

20
00:02:24,440 --> 00:02:30,020
Vous vous retrouvez donc probablement avec quelque chose de plus petit que 100 unités lexicales.

21
00:02:30,020 --> 00:02:35,510
Voici les deux extrêmes. Les facteurs, comme nous l'avons mentionné, se trouvent entre les deux, parce que nous avons ces unités lexicales

22
00:02:35,510 --> 00:02:41,110
qui ne sont pas aussi grandes qu'un mot mais qui sont généralement plus grandes que des caractères.

23
00:02:41,110 --> 00:02:48,410
Une taille de vocabulaire restreinte est généralement préférable, autant d'un point de vue de calcul

24
00:02:48,410 --> 00:02:56,090
que pour le résultat que nous pouvons obtenir. À ce stade,

25
00:02:56,090 --> 00:03:00,460
nous serions portés à penser que les caractères sont le gagnant ici et que nous devrions les utiliser.

26
00:03:00,460 --> 00:03:05,480
Mais avant de faire ça, nous devons examiner les autres points de vue et

27
00:03:05,480 --> 00:03:10,220
le deuxième point de vue est la longueur de la phrase. Nous avons vu

28
00:03:10,220 --> 00:03:14,390
dans les deux présentations précédentes que généralement, si nous avons une très longue séquence,

29
00:03:14,390 --> 00:03:21,800
ça peut poser problème. Il est donc important de trouver une représentation

30
00:03:21,800 --> 00:03:29,060
qui ne va pas garder la longueur de notre séquence. Voici un exemple de ce qui se passe

31
00:03:29,060 --> 00:03:34,280
si nous choisissons des facteurs et des caractères. Si nous commençons par des mots,

32
00:03:34,280 --> 00:03:39,080
vous voyez que maintenant qu’il me faut seulement deux mots si je veux que le modèle représente la phrase « hi there ».

33
00:03:39,080 --> 00:03:45,380
Si je choisis les caractères, il me faut huit caractères.

34
00:03:45,380 --> 00:03:51,080
Alors vous voyez que caractères mènent à une séquence beaucoup plus longue et, encore une fois, les facteurs sont quelque part entre les deux.

35
00:03:51,080 --> 00:03:54,440
Ça va dépendra de l'algorithme que j'utilise pour créer les facteurs.

36
00:03:54,440 --> 00:04:01,400
Et comme je l'ai déjà mentionné, une représentation plus courte est généralement préférable

37
00:04:01,400 --> 00:04:06,350
et c’est vrai tant sur le plan des calculs que des résultats.

38
00:04:06,350 --> 00:04:13,459
Dans ce cas, nous avons un conflit parce que les mots seraient une meilleure solution.

39
00:04:13,459 --> 00:04:20,840
Le dernier aspect que je voudrais vous montrer est cette idée d’unités lexicales hors vocabulaire.

40
00:04:20,840 --> 00:04:26,720
En gros, une unité lexicale hors vocabulaire est une unité lexicale qui

41
00:04:26,720 --> 00:04:32,690
n'a jamais été vu en entraînement, ce qui veut dire que le modèle ne sait pas quoi faire

42
00:04:32,690 --> 00:04:37,150
avec cette unité lexicale et c'est quelque chose qui va certainement se produire

43
00:04:37,150 --> 00:04:42,580
si vous utilisez des mots parce qu'il est irréaliste de supposer que vos données d’entraînement

44
00:04:42,580 --> 00:04:47,890
contiennent tous les mots du monde. Vous obtiendrez donc une unité lexicale hors vocabulaire

45
00:04:47,890 --> 00:04:54,700
et ce sera un défi pour votre modèle.

46
00:04:54,700 --> 00:05:00,220
Cependant, si on choisit d’utiliser des facteurs et des caractères, c'est le cas contraire :

47
00:05:00,220 --> 00:05:06,520
le modèle verra probablement toutes les unités lexicales pendant l'entraînement et c'est particulièrement vrai pour les caractères.

48
00:05:06,520 --> 00:05:10,950
Alors nous n'aurons pas ce problème d’unités lexicales hors vocabulaire.

49
00:05:10,950 --> 00:05:16,930
Il semble donc que si nous utilisons des caractères ou peut-être des facteurs,

50
00:05:16,930 --> 00:05:19,440
nous pouvons éviter ce problème.

51
00:05:19,650 --> 00:05:24,480
Après avoir examiné tous les choix, nous avons vu que

52
00:05:24,480 --> 00:05:29,380
chaque choix a ses avantages et ses inconvénients. Ça dépend évidemment de la tâche que nous allons résoudre,

53
00:05:29,380 --> 00:05:33,850
et vous voulez peut-être faire vos propres expériences, mais je tiens à rappeler que

54
00:05:33,850 --> 00:05:38,740
les facteurs, qui sont peut-être moins connus,

55
00:05:38,740 --> 00:05:44,620
sont un bon choix en raison du compromis qu’ils offrent entre les mots et les caractères.

56
00:05:44,620 --> 00:05:50,620
Ainsi vous évitez les deux cas extrêmes : les vocabulaires trop importantes et

57
00:05:50,620 --> 00:05:55,930
les phrases trop longues. Le facteur est en fait un bon choix qui contribue également à résoudre

58
00:05:55,930 --> 00:06:01,210
le problème d’unités lexicales hors vocabulaire. Dans cette présentation,

59
00:06:01,210 --> 00:06:08,740
pour la simplicité, nous considérerons l’unité lexicale comme égale au mot.

60
00:06:08,740 --> 00:06:21,130
En tant qu'humains, c'est plus facile à penser en ces termes. Donc maintenant que nous savons que nous voulons utiliser le mot comme unité lexicale,

61
00:06:21,130 --> 00:06:29,320
voyons comment représenter ces mots. Dans le passé, nous utilisions

62
00:06:29,320 --> 00:06:36,370
une représentation 1 parmi n que vous avez déjà apprise auparavant dans cette école.

63
00:06:36,370 --> 00:06:42,910
L'idée est que nous allons associer une unité lexicale à un vecteur et que

64
00:06:42,910 --> 00:06:49,870
toutes les positions de ce vecteur sont égales à zéro sauf une, une position est égale à 1

65
00:06:49,870 --> 00:06:55,210
et l'indice de cette position me dit de quel mot il s'agit.

66
00:06:55,210 --> 00:07:03,320
Cela s'accompagne en fait de certaines contraintes qui sont des inconvénients.

67
00:07:03,320 --> 00:07:09,830
La première est que, comme dans l'exemple ci-dessus,

68
00:07:09,830 --> 00:07:16,160
si j'ai un vocabulaire de trois mots : chien, chat et maison, si vous voyez la représentation ici,

69
00:07:16,160 --> 00:07:19,789
vous pouvez constater comment nous représentons cela avec la représentation 1 parmi n,

70
00:07:19,789 --> 00:07:25,430
donc ce sont tous des zéros sauf une position et cette position me dit de quel mot il s’agit.

71
00:07:25,430 --> 00:07:30,169
Mais si j'ai trois mots, j'ai besoin d'un vecteur de trois éléments.

72
00:07:30,169 --> 00:07:37,940
Ça peut poser problème et nous le verrons plus tard.

73
00:07:37,940 --> 00:07:47,120
Prenons un autre exemple. Maintenant j'ai quatre mots : maison, chien, chat et pc.

74
00:07:47,120 --> 00:07:54,830
Vous voyez que maintenant pour représenter ceci, j'ai besoin d'un vecteur de taille quatre.

75
00:07:54,830 --> 00:08:00,080
Vous comprenez l'idée que nous avons une contrainte entre la taille du vecteur et le nombre de mots,

76
00:08:00,080 --> 00:08:04,699
donc la taille du vocabulaire.

77
00:08:04,699 --> 00:08:12,380
La taille du vocabulaire peut devenir très importante dans certains cas, ce qui peut être vraiment problématique.

78
00:08:12,380 --> 00:08:21,830
Il y a aussi un autre inconvénient,

79
00:08:21,830 --> 00:08:27,070
donc je vais revenir au premier exemple. Vous voyez chat, chien et maison et vous voyez que je trace ces trois vecteurs 

80
00:08:27,070 --> 00:08:36,200
dans l'espace vectoriel et tous ces vecteurs,

81
00:08:36,200 --> 00:08:42,320
ils sont à la même distance.

82
00:08:42,320 --> 00:08:52,430
Nous aimerions que chat et chien soient plus proches que, par exemple, chat et maison, parce que

83
00:08:52,430 --> 00:08:57,830
ça nous donnerait une intuition sur la sémantique de ce mot mais vous voyez que

84
00:08:57,830 --> 00:09:02,660
ce n'est pas le cas ici et en fait, ce type de représentation

85
00:09:02,660 --> 00:09:06,290
ne nous donne aucun indice sur la sémantique,

86
00:09:06,290 --> 00:09:13,850
ce qui est un inconvénient. Mais disons que nous prenons cette représentation, donc maintenant que nous savons comment représenter les mots,

87
00:09:13,850 --> 00:09:19,730
l'étape suivante est de savoir comment représenter les phrases et

88
00:09:19,730 --> 00:09:23,660
nous pouvons utiliser la représentation sac de mots

89
00:09:23,660 --> 00:09:30,769
que j'ai mentionnée au début de la première présentation.

90
00:09:30,769 --> 00:09:36,019
En gros, nous prenons la représentation 1 parmi n et nous additionnons les vecteurs. C'est très pratique et facile à faire et

91
00:09:36,019 --> 00:09:43,309
ici vous voyez chat, chien et maison et en gros,

92
00:09:43,309 --> 00:09:47,419
si j'ai la phrase « chat, chien, maison », la représentation sera

93
00:09:47,419 --> 00:09:52,869
la somme de ces trois vecteurs.

94
00:09:53,230 --> 00:09:58,089
Ici, j'ai chat, chien et maison, mais si je veux représenter

95
00:09:58,089 --> 00:10:04,579
maison, chien et chat, par exemple, je me retrouve avec la même représentation.

96
00:10:04,579 --> 00:10:08,959
Donc c'est le problème que j'ai mentionné au début de la première présentation.

97
00:10:08,959 --> 00:10:14,989
Si nous utilisons cette représentation, nous perdons l'ordre des éléments,

98
00:10:14,989 --> 00:10:20,869
qui est une information très importante lorsqu'il s'agit d'un texte.

99
00:10:20,869 --> 00:10:26,419
Par exemple, vous pouvez voir que la sémantique peut changer radicalement

100
00:10:26,419 --> 00:10:30,980
si je ne sais pas plus quel est l'ordre des mots

101
00:10:30,980 --> 00:10:33,669
des éléments.